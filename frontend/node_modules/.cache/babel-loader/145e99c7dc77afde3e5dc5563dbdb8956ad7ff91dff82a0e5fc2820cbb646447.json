{"ast":null,"code":"var _jsxFileName = \"/home/morpole/Desktop/todo/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';  // Don't forget to import axios\n// import './App.css';\n\n// function App() {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTask, setNewTask] = useState('');\n\n//   // Define the fetchTasks function outside of useEffect so it can be reused\n//   const fetchTasks = async () => {\n//     try {\n//       const response = await axios.get('/api/tasks');\n//       setTasks(response.data.reverse());\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//     }\n//   };\n\n//   // Fetch tasks when the component mounts\n//   useEffect(() => {\n//     fetchTasks();\n//   }, []);\n\n//   const addTask = async (e) => {\n//     e.preventDefault();\n//     if (!newTask.trim()) return;\n//     try {\n//       await axios.post('/api/tasks', { description: newTask });\n//       setNewTask('');  // Clear the input after adding a new task\n//       fetchTasks();  // Refresh the task list after adding a new one\n//     } catch (error) {\n//       console.error('Error adding task:', error);\n//     }\n//   };\n\n//   const toggleComplete = async (id, completed) => {\n//     try {\n//       await axios.patch(`/api/tasks/${id}`, { completed: !completed });\n//       fetchTasks();  // Refresh the task list after toggling completion\n//     } catch (error) {\n//       console.error('Error toggling task completion:', error);\n//     }\n//   };\n\n//   const deleteTask = async (taskId) => {\n//     try {\n//       await axios.delete(`/api/tasks/${taskId}`);\n//       fetchTasks();  // Refresh the task list after deleting\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n//     }\n//   };\n\n//   const editTask = async (id, newDescription) => {\n//     try {\n//       await axios.patch(`/api/tasks/${id}`, { description: newDescription });\n//       fetchTasks();  // Refresh the task list after editing\n//     } catch (error) {\n//       console.error('Error editing task:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Todo App</h1>\n//       <form onSubmit={addTask}>\n//         <input\n//           type=\"text\"\n//           value={newTask}\n//           onChange={(e) => setNewTask(e.target.value)}\n//           placeholder=\"Add a new task\"\n//         />\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n//       <ul>\n//         {tasks.map((task) => (\n//           <li key={task._id}> {/* Make sure to use _id as your key if your task objects have _id */}\n//             <button onClick={() => toggleComplete(task._id, task.completed)}>\n//               {task.completed ? '✓' : '○'}\n//             </button>\n//             <span className={task.completed ? 'completed' : ''}>{task.description}</span>\n//             <div className=\"actions\">\n//               <button onClick={() => editTask(task._id, prompt('Edit task:', task.description))}>Edit</button>\n//               <button onClick={() => deleteTask(task._id)}>Delete</button>\n//             </div>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('/api/tasks');\n      setTasks(response.data.reverse());\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const addTask = async e => {\n    e.preventDefault();\n    if (!newTask.trim()) return;\n    try {\n      await axios.post('/api/tasks', {\n        description: newTask\n      });\n      setNewTask('');\n      fetchTasks();\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const toggleComplete = async (id, completed) => {\n    try {\n      await axios.patch(`/api/tasks/${id}`, {\n        completed: !completed\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n    }\n  };\n  const deleteTask = async taskId => {\n    try {\n      await axios.delete(`/api/tasks/${taskId}`);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const editTask = async (id, newDescription) => {\n    try {\n      await axios.patch(`/api/tasks/${id}`, {\n        description: newDescription\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addTask,\n        className: \"task-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTask,\n          onChange: e => setNewTask(e.target.value),\n          placeholder: \"New task\",\n          className: \"task-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"add-task-btn\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"task-list\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `task-item ${task.completed ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleComplete(task._id, task.completed),\n              className: \"completion-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons-outlined\",\n                children: task.completed ? 'check_circle' : 'radio_button_unchecked'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"task-description\",\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editTask(task._id, prompt('Edit task:', task.description)),\n              className: \"edit-task\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons-outlined\",\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(task._id),\n              className: \"delete-task\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons-round\",\n                children: \"delete_outline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","response","get","data","reverse","error","console","addTask","e","preventDefault","trim","post","description","toggleComplete","id","completed","patch","deleteTask","taskId","delete","editTask","newDescription","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","map","task","onClick","_id","prompt","_c","$RefreshReg$"],"sources":["/home/morpole/Desktop/todo/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';  // Don't forget to import axios\n// import './App.css';\n\n// function App() {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTask, setNewTask] = useState('');\n\n//   // Define the fetchTasks function outside of useEffect so it can be reused\n//   const fetchTasks = async () => {\n//     try {\n//       const response = await axios.get('/api/tasks');\n//       setTasks(response.data.reverse());\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//     }\n//   };\n\n//   // Fetch tasks when the component mounts\n//   useEffect(() => {\n//     fetchTasks();\n//   }, []);\n\n//   const addTask = async (e) => {\n//     e.preventDefault();\n//     if (!newTask.trim()) return;\n//     try {\n//       await axios.post('/api/tasks', { description: newTask });\n//       setNewTask('');  // Clear the input after adding a new task\n//       fetchTasks();  // Refresh the task list after adding a new one\n//     } catch (error) {\n//       console.error('Error adding task:', error);\n//     }\n//   };\n\n//   const toggleComplete = async (id, completed) => {\n//     try {\n//       await axios.patch(`/api/tasks/${id}`, { completed: !completed });\n//       fetchTasks();  // Refresh the task list after toggling completion\n//     } catch (error) {\n//       console.error('Error toggling task completion:', error);\n//     }\n//   };\n\n//   const deleteTask = async (taskId) => {\n//     try {\n//       await axios.delete(`/api/tasks/${taskId}`);\n//       fetchTasks();  // Refresh the task list after deleting\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n//     }\n//   };\n\n//   const editTask = async (id, newDescription) => {\n//     try {\n//       await axios.patch(`/api/tasks/${id}`, { description: newDescription });\n//       fetchTasks();  // Refresh the task list after editing\n//     } catch (error) {\n//       console.error('Error editing task:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Todo App</h1>\n//       <form onSubmit={addTask}>\n//         <input\n//           type=\"text\"\n//           value={newTask}\n//           onChange={(e) => setNewTask(e.target.value)}\n//           placeholder=\"Add a new task\"\n//         />\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n//       <ul>\n//         {tasks.map((task) => (\n//           <li key={task._id}> {/* Make sure to use _id as your key if your task objects have _id */}\n//             <button onClick={() => toggleComplete(task._id, task.completed)}>\n//               {task.completed ? '✓' : '○'}\n//             </button>\n//             <span className={task.completed ? 'completed' : ''}>{task.description}</span>\n//             <div className=\"actions\">\n//               <button onClick={() => editTask(task._id, prompt('Edit task:', task.description))}>Edit</button>\n//               <button onClick={() => deleteTask(task._id)}>Delete</button>\n//             </div>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('/api/tasks');\n      setTasks(response.data.reverse());\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const addTask = async (e) => {\n    e.preventDefault();\n    if (!newTask.trim()) return;\n    try {\n      await axios.post('/api/tasks', { description: newTask });\n      setNewTask('');\n      fetchTasks();\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  const toggleComplete = async (id, completed) => {\n    try {\n      await axios.patch(`/api/tasks/${id}`, { completed: !completed });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n    }\n  };\n\n  const deleteTask = async (taskId) => {\n    try {\n      await axios.delete(`/api/tasks/${taskId}`);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  const editTask = async (id, newDescription) => {\n    try {\n      await axios.patch(`/api/tasks/${id}`, { description: newDescription });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error editing task:', error);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header>\n        <h1>Todo</h1>\n      </header>\n      <div className=\"container\">\n        <form onSubmit={addTask} className=\"task-form\">\n          <input\n            type=\"text\"\n            value={newTask}\n            onChange={(e) => setNewTask(e.target.value)}\n            placeholder=\"New task\"\n            className=\"task-input\"\n          />\n          <button type=\"submit\" className=\"add-task-btn\">+</button>\n        </form>\n        <ul className=\"task-list\">\n          {tasks.map((task) => (\n            <li key={task._id} className={`task-item ${task.completed ? 'completed' : ''}`}>\n              <div className=\"task-content\">\n                <button \n                  onClick={() => toggleComplete(task._id, task.completed)}\n                  className=\"completion-btn\"\n                >\n                  <i className=\"material-icons-outlined\">\n                    {task.completed ? 'check_circle' : 'radio_button_unchecked'}\n                  </i>\n                </button>\n                <span className=\"task-description\">{task.description}</span>\n              </div>\n              <div className=\"task-actions\">\n                <button onClick={() => editTask(task._id, prompt('Edit task:', task.description))} className=\"edit-task\">\n                  <i className=\"material-icons-outlined\">edit</i>\n                </button>\n                <button onClick={() => deleteTask(task._id)} className=\"delete-task\">\n                  <i className=\"material-icons-round\">delete_outline</i>\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}